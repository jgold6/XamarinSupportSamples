{"Name":"FlatUI","Id":468,"Alias":"FlatUI","Description":"FlatUI is a Xamarin.Android port of the original Java FlatUI\n\n###Features###\n\n\n - Very easy to use\n - Many themes built in\n - Create custom themes in only a few lines of code\n - Change themes on the fly\n - ActionBar gets themed too\n\n###Getting Started###\n\nTo use FlatUI, all you need to do is replace some of your normal widgets with the FlatUI version\n\nYour normal button:\n\n```xml\n\u003cButton\n  android:id=\"@+id/buttonBlock\"\n  android:layout_width=\"wrap_content\"\n  android:layout_height=\"wrap_content\" /\u003e\n```\n\nNow becomes:\n\n```xml\n\u003cFlatUI.FlatButton\n  android:id=\"@+id/buttonBlock\"\n  android:layout_width=\"wrap_content\"\n  android:layout_height=\"wrap_content\" /\u003e\n```\n\n\n**NOTE:** FlatUI only works on Android 4.x+!\n\n\n###Changing Themes###\n\nYou can set the theme a number of ways:\n\n - Call `FlatUI.SetActivityTheme(FlatTheme.Sky());` to theme all controls the same in the activity\n - Set the attribute on the widget in the layout file: `flatui:theme=\"sky\"`\n - Programmatically set each widget\u0027s theme: `myFlatButton.Theme = FlatTheme.Sky();`\n\n###FlatUI Widgets###\n\nThere are a number of \u0027flat\u0027 versions of android widgets available that inherit from their normal counterparts:\n\n\n - FlatEditText\n - FlatTextView\n - FlatToggleButton\n - FlatRadioButton\n - FlatCheckBox\n - FlatSeekBar\n - FlatButton\n \n\n###Custom Themes###\nIt\u0027s very easy to make custom themes:\n\n```csharp\n//Create a custom theme very easily!\nvar customJabbrTheme = new FlatUI.FlatTheme () {\n    DarkAccentColor = Android.Graphics.Color.ParseColor(\"#00103f\"),\n    BackgroundColor = Android.Graphics.Color.ParseColor(\"#003259\"),\n    LightAccentColor = Android.Graphics.Color.ParseColor(\"#005191\"),\n    VeryLightAccentColor = Android.Graphics.Color.ParseColor(\"#719fc3\")\n};\n\n//Set your theme programmatically\nFlatUI.SetActivityTheme(this, customJabbrTheme);\n```\n\n\n###ActionBar###\n\nFinally, the ActionBar can also be themed:\n\n```csharp\nFlatUI.FlatUI.SetActionBarTheme (this, FlatUI.FlatUI.DefaultTheme, false);\n```\n\n\n###Layout File Attributes###\n\nIf you want, you can specify some of the attributes for the FlatUI widgets directly in your Android Layout axml files.\n\nFirst, make sure you add the `xmlns:flatui` namespace to your root Layout item like this:\n\n```xml\n\u003cLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:flatui=\"http://schemas.android.com/apk/res-auto\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\"\u003e ...\n```\n\nNow, you can set attributes on various FlatUI widgets like this:\n\n```xml\n    \u003cFlatUI.FlatEditText\n        android:id=\"@+id/edittextFlat\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        flatui:fieldStyle=\"flat\"\n        flatui:cornerRadius=\"3dip\"\n        flatui:fontWeight=\"bold\" /\u003e\n```\n\nHere\u0027s a list of all the attributes you can set in your layout file for the various FlatUI widgets:\n\n - **FlatEditText:** fieldStyle, cornerRadius,textPadding, fontFamily, fontWeight, textApperance\n - **FlatSeekBar:** none\n - **FlatButton:** textAppearance, textPadding, cornerRadius, isFullFlat\n - **FlatCheckBox:** cornerRadius, size, fontFamily, fontWeight\n - **FlatRadioButton:** size, fontFamily, fontWeight\n - **FlatToggleButton:** size\n \n\n\n###Changes###\n\n\n - Nov. 30, 2013 - Initial Release\n \n\n###Thanks###\n\nBig thanks goes to @eluleci for his initial work on the original Java version of FlatUI: https://github.com/eluleci/FlatUI\n","Version":"1.0","Summary":"Give your Android UI some Flat appeal","QuickStart":"###Getting Started###\n\nTo use FlatUI, all you need to do is replace some of your normal widgets with the FlatUI version\n\nYour normal button:\n\n```xml\n\u003cButton\n  android:id=\"@+id/buttonBlock\"\n  android:layout_width=\"wrap_content\"\n  android:layout_height=\"wrap_content\" /\u003e\n```\n\nNow becomes:\n\n```xml\n\u003cFlatUI.FlatButton\n  android:id=\"@+id/buttonBlock\"\n  android:layout_width=\"wrap_content\"\n  android:layout_height=\"wrap_content\" /\u003e\n```\n\n\n**NOTE:** FlatUI only works on Android 4.x+!\n\n###Changing Themes###\n\nYou can set the theme a number of ways:\n\n - Call `FlatUI.SetActivityTheme(FlatTheme.Sky());` to theme all controls the same in the activity\n - Set the attribute on the widget in the layout file: `flatui:theme=\"sky\"`\n - Programmatically set each widget\u0027s theme: `myFlatButton.Theme = FlatTheme.Sky();`\n\n###FlatUI Widgets###\n\nThere are a number of \u0027flat\u0027 versions of android widgets available that inherit from their normal counterparts:\n\n\n - FlatEditText\n - FlatTextView\n - FlatToggleButton\n - FlatRadioButton\n - FlatCheckBox\n - FlatSeekBar\n - FlatButton\n \n\n###Custom Themes###\n\nIt\u0027s very easy to make custom themes:\n\n```csharp\n//Create a custom theme very easily!\nvar customJabbrTheme = new FlatUI.FlatTheme () {\n    DarkAccentColor = Android.Graphics.Color.ParseColor(\"#00103f\"),\n    BackgroundColor = Android.Graphics.Color.ParseColor(\"#003259\"),\n    LightAccentColor = Android.Graphics.Color.ParseColor(\"#005191\"),\n    VeryLightAccentColor = Android.Graphics.Color.ParseColor(\"#719fc3\")\n};\n\n//Set your theme programmatically\nFlatUI.SetActivityTheme(this, customJabbrTheme);\n```\n\n\n###ActionBar###\n\nFinally, the ActionBar can also be themed:\n\n```csharp\nFlatUI.FlatUI.SetActionBarTheme (this, FlatUI.FlatUI.DefaultTheme, false);\n```\n\n","Hash":"8e2848e9d89eb4f0a877eea524a86571","TargetPlatforms":["android"],"TrialHash":null}